name: Generate IPs

on:
  schedule:
    - cron: '0 16 31 12 *' # 每年12月31日 UTC 16:00（东八区 1月1日 00:00）
  workflow_dispatch: # 支持手动触发
  push:
    branches:
      - main
    paths:
      - 'ip.txt'
      - 'ips.txt'
      - 'ip.csv'

jobs:
  generate-ips:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt' # 使用 requirements.txt 缓存依赖

      # 验证 Python 安装
      - name: Verify Python installation
        run: |
          python3 --version
          which python3
          python3 -m ensurepip --upgrade
          python3 -m pip install --upgrade pip
          echo "Python executable: $(which python3)"

      # 验证 requirements.txt
      - name: Verify requirements.txt
        run: |
          if [ -f requirements.txt ]; then
            echo "requirements.txt 存在"
            cat requirements.txt
          else
            echo "ERROR: requirements.txt not found"
            exit 1
          fi

      # 安装系统依赖
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmaxminddb-dev

      # 安装 Python 依赖
      - name: Install Python dependencies
        run: |
          pip3 install --user -r requirements.txt
          pip3 list
          echo "System Python: $(which python3)"

      # 检查 GeoIP 数据库
      - name: Check GeoIP database
        run: |
          if [ -f "GeoLite2-City.mmdb" ]; then
            echo "GeoIP 数据库存在: GeoLite2-City.mmdb"
            ls -l GeoLite2-City.mmdb
          else
            echo "GeoIP 数据库不存在，将由脚本自动下载"
          fi

      # 确保 iptest 可执行
      - name: Ensure iptest is executable
        run: |
          if [ -f iptest ]; then
            chmod +x iptest
            echo "已确保 iptest 可执行"
          else
            echo "ERROR: iptest binary not found"
            exit 1
          fi
          if [ -f iptest.sh ]; then
            chmod +x iptest.sh
            echo "已确保 iptest.sh 可执行"
          else
            echo "ERROR: iptest.sh not found"
            exit 1
          fi

      # 运行脚本，禁用内部推送
      - name: Run ip-filter-speedtest-api.py
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
        run: |
          python3 ip-filter-speedtest-api.py --url=https://bihai.cf/CFIP/CUCC/standard.csv,https://bihai.cf/CFIP/CMCC/standard.csv --no-push --update-geoip
        continue-on-error: false

      # 检查生成的文件
      - name: Check generated files
        run: |
          ls -l ip.txt ips.txt ip.csv .ip.csv speedtest.log GeoLite2-City.mmdb || echo "部分文件可能未生成"

      # 配置 Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      # 提交更改
      - name: Commit changes
        run: |
          git add ip.txt ips.txt ip.csv .ip.csv speedtest.log GeoLite2-City.mmdb
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update IP lists, test results, and GeoIP database [ci skip]"
        continue-on-error: true

      # 推送更改
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin main

      # 上传 artifacts
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ip-files
          path: |
            ip.txt
            ips.txt
            ip.csv
            .ip.csv
            speedtest.log
            GeoLite2-City.mmdb
          if-no-files-found: warn
