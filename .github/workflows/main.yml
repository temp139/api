name: Generate IPs

on:
  schedule:
    - cron: '0 16 */3 * *' # 东八区每3天凌晨00:00（UTC 16:00 前一天）
  workflow_dispatch: # 支持手动触发
  push:
    branches:
      - main
    paths:
      - 'ip.txt'
      - 'ips.txt'
      - 'ip.csv'

jobs:
  generate-ips:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt' # 明确使用 requirements.txt

      # 验证 Python 安装
      - name: Verify Python installation
        run: |
          python --version
          which python
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip

      # 安装系统依赖
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libmaxminddb-dev

      # 创建并激活虚拟环境，安装 Python 依赖
      - name: Set up virtual environment
        run: |
          python -m venv .venv
          ls -l .venv/bin/python || echo "ERROR: .venv/bin/python not found"
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip list

      # 确保 iptest 可执行
      - name: Ensure iptest is executable
        run: |
          if [ -f iptest ]; then
            chmod +x iptest
            echo "已确保 iptest 可执行"
          else
            echo "ERROR: iptest binary not found"
            exit 1
          fi
          if [ -f iptest.sh ]; then
            chmod +x iptest.sh
            echo "已确保 iptest.sh 可执行"
          else
            echo "ERROR: iptest.sh not found"
            exit 1
          fi

      # 运行脚本，禁用内部推送
      - name: Run ip-filter-speedtest-api.py
        env:
          MAXMIND_LICENSE_KEY: ${{ secrets.MAXMIND_LICENSE_KEY }}
        run: |
          source .venv/bin/activate
          python ip-filter-speedtest-api.py --url=https://bihai.cf/CFIP/CUCC/standard.csv,https://bihai.cf/CFIP/CMCC/standard.csv --no-push
        continue-on-error: false

      # 检查生成的文件
      - name: Check generated files
        run: |
          ls -l ip.txt ips.txt ip.csv .ip.csv speedtest.log || echo "部分文件可能未生成"

      # 配置 Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      # 提交更改
      - name: Commit changes
        run: |
          git add ip.txt ips.txt ip.csv .ip.csv speedtest.log
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "Update IP lists and test results [ci skip]"
        continue-on-error: true

      # 推送更改
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin main

      # 上传 artifacts
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ip-files
          path: |
            ip.txt
            ips.txt
            ip.csv
            .ip.csv
            speedtest.log
          if-no-files-found: warn
